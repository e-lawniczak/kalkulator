// <auto-generated />
using Calculator.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Calculator.Migrations
{
    [DbContext(typeof(OperationHistoryContext))]
    partial class OperationHistoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Calculator.Model.HistoryEntry", b =>
                {
                    b.Property<int>("HistoryEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperatorId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValueA")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValueB")
                        .HasColumnType("TEXT");

                    b.HasKey("HistoryEntryId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("Calculator.Model.Operator", b =>
                {
                    b.Property<int>("OperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OperatorId");

                    b.ToTable("Operator");
                });

            modelBuilder.Entity("Calculator.Model.HistoryEntry", b =>
                {
                    b.HasOne("Calculator.Model.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operator");
                });
#pragma warning restore 612, 618
        }
    }
}
